---

- name: Set facts for this role
  set_fact:
    target_namespace: 'argocd'

- name: Check for existing gitops ArgoCD
  kubernetes.core.k8s_info:
    api_key: "{{ api_key | default(omit) }}"
    kubeconfig: "{{ kubeconfig_path }}"
    api_version: argoproj.io/v1alpha1
    kind: ArgoCD
    name: gitops
    namespace: "{{ target_namespace }}"
  register: _result

- name: Set fact if gitops ArgoCD is already running
  set_fact:
    argocd_running: "{{ _result.resources | map(attribute='status') | selectattr('phase','equalto','Available') | length > 0 }}"

- when: true
  block:

    - name: Set node-role.kubernetes.io/master value to empty string
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: v1
        kind: Node
        name: "{{ item }}"
        definition:
          metadata:
            labels:
              "node-role.kubernetes.io/master": ""
      loop: "{{ groups['master_nodes'] }}"
      register: _result

    - name: Add topolvm.cybozu.com/webhook label to operators namespace
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: v1
        kind: Namespace
        name: operators
        definition:
          metadata:
            labels:
              "topolvm.cybozu.com/webhook": ignore
      register: _result

- when: not argocd_running
  block:

    - name: Create the argocd Namespace
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: v1
        kind: Namespace
        name: "{{ target_namespace }}"
      register: _result

    - name: Create the gitops-cluster-admin RoleBinding
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        name: gitops-cluster-admin
        namespace: "{{ target_namespace }}"
        definition:
          subjects:
          - kind: ServiceAccount
            name: gitops-argocd-application-controller
            namespace: argocd
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
      register: _result

    - name: Create the default AppProject
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: argoproj.io/v1alpha1
        kind: AppProject
        name: default
        namespace: "{{ target_namespace }}"
        definition:
          spec:
            sourceRepos:
            - '*'
            destinations:
            - namespace: '*'
              server: '*'
            clusterResourceWhitelist:
            - group: '*'
              kind: '*'
      register: _result

    - name: Create the infra AppProject
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: argoproj.io/v1alpha1
        kind: AppProject
        name: infra
        namespace: "{{ target_namespace }}"
        definition:
          spec:
            sourceRepos:
            - '*'
            destinations:
            - namespace: '*'
              server: '*'
            clusterResourceWhitelist:
            - group: '*'
              kind: '*'
      register: _result

    - name: Create the userapps AppProject
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: argoproj.io/v1alpha1
        kind: AppProject
        name: userapps
        namespace: "{{ target_namespace }}"
        definition:
          spec:
            sourceRepos:
            - '*'
            destinations:
            - namespace: '*'
              server: '*'
            clusterResourceWhitelist:
            - group: '*'
              kind: '*'
      register: _result

    - name: Create the dashboard-metrics-scraper Application
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: argoproj.io/v1alpha1
        kind: Application
        name: cluster
        namespace: "{{ target_namespace }}"
        definition:
          spec:
            destination:
              server: 'https://kubernetes.default.svc'
            project: default
            source:
              path: apps
              repoURL: 'https://github.com/gmarcy/k3router'
              targetRevision: HEAD
            syncPolicy:
              automated: {}
              retry:
                limit: 100
      register: _result

    - name: Create the gitops ArgoCD
      kubernetes.core.k8s:
        api_key: "{{ api_key | default(omit) }}"
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: argoproj.io/v1alpha1
        kind: ArgoCD
        name: gitops
        namespace: "{{ target_namespace }}"
        definition:
          spec:
            server:
              host: gitops.192.168.222.253.nip.io
              ingress:
                enabled: true
              insecure: true
      register: _result
